package {{.algorithmName | ToLower }}

import (
	"github.com/netm4ul/netm4ul/core/communication"
	log "github.com/sirupsen/logrus"
)

//{{.algorithmName}} is the struct for this algorithm
type {{.algorithmName}} struct {
	Nodes []communication.Node
}

//New{{.algorithmName}} is a {{.algorithmName}} generator.
func New{{.algorithmName}}() *{{.algorithmName}} {
	{{.algorithmShortName}} := {{.algorithmName}}{}
	return &{{.algorithmShortName}}
}

//Name is the name of the algorithm
func ({{.algorithmShortName}} *{{.algorithmName}}) Name() string {
	return "{{.algorithmName}}"
}

//SetNodes is the setter for the Nodes variable.
//It is used for adding new nodes from outside this package.
func ({{.algorithmShortName}} *{{.algorithmName}}) SetNodes(nodes []communication.Node) {
	{{.algorithmShortName}}.Nodes = nodes
}

//NextExecutionNodes returns selected nodes
func ({{.algorithmShortName}} *{{.algorithmName}}) NextExecutionNodes(cmd communication.Command) []communication.Node {
	selectedNode := []communication.Node{}
	return selectedNode
}